

// IMPORTANT NOTE: this file is not intended to be used directly. Its just a try, the jenkinsfileCDpipeline is the one that should be used.


pipeline {
  agent any
  stages{
    stage('Build Database'){
        steps{ 
            sh 'docker container prune -f'
            sh 'docker run --name my-postgres -e POSTGRES_PASSWORD=secret -p 5432:5432 -d postgres'
        }
    }

    stage('Enviroment Setup'){
        environment{
            DB_HOST = """${sh(
            returnStdout: true,
            script: 'docker inspect -f "{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}" my-postgres'
            )}"""
        }
        steps{
            sh 'echo "DB_HOST: ${DB_HOST}"'
        }
    }

    stage('Build backend'){
        agent any
        steps{
            sh 'docker run -d --name backend -e DATABASE_HOST=${DB_HOST} -p 8081:8080 -t jloperad/praxis-gildedrose_backend:latest .'
        }
    }   

    stage('Enviroment of backend'){
        environment{
            BACKEND_IP = """${sh(
            returnStdout: true,
            script: 'docker inspect -f "{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}" backend'
            )}"""
        }
        steps{
            sh 'echo "BACKEND_IP: ${BACKEND_IP}"'
        }
    }

    stage('Build frontend'){
        agent any
        steps{
            sh 'docker run -d -e BACKEND_HOST=${BACKEND_IP} -p 4200:4200 -t jloperad/praxis-gildedrose_frontend:latest .'
        }
    }
  }
} 